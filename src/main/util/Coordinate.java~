package util;


import java.util.HashMap;
import java.io.Serializable;


public class Coordinate implements Serializable {

	private int x;
	private int y;
	

	public Coordinate(int x, int y) {
		this.x = x;
		this.y = y;
	}


	public int getX() {
		return this.x;
	}


	public int getY() {
		return this.y;
	}


	public boolean isValidTile() {
		if (this.x > 7 || this.x < 0 ||
			this.y > 7 || this.y < 0)
			return false;
		return true;
	}


	public Coordinate shift(Vector v) {
		return new Coordinate(this.x + v.getXChange(),
							  this.y + v.getYChange());
	}


	public static Coordinate[] getAllValidCoordinates() {
		Coordinate[] allValidCoordinates = new Coordinate[64];

		int i = 0;
		for (int y = 0; y < 8; y++) {
			for (int x = 0; x < 8; x++) {
				allValidCoordinates[i] = new Coordinate(x, y);
				i++;
			}
		}

		return allValidCoordinates;
	}


	@Override
	public boolean equals(Object obj) {
		Coordinate cObj;
		try {
		    cObj = (Coordinate) obj;
		}
		catch (ClassCastException e) {
			return false;
		}

		if (cObj == null)
			return false;

		if (cObj.getX() == this.x && cObj.getY() == this.y)
			return true;

		return false;
	}


	@Override
	public String toString() {
		return "(" + this.x + "," + this.y + ") " + StringUtility.coordinateToString(this);
	}

}
