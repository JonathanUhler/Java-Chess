package util;


import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.file.StandardOpenOption;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JOptionPane;


public class Log {

	private static final String STDLOG_FILE = "Chess.log";


	public static final int DEBUG = 0;
	public static final int INFO = 1;
	public static final int WARN = 2;
	public static final int ERROR = 3;
	public static final int FATAL = 4;
	public static final String[] levelToString = {"DEBUG", "INFO", "WARN", "ERROR", "FATAL"};


	public static void gfxmsg(String title, Object message) {
		JOptionPane.showMessageDialog(null, message, title, JOptionPane.PLAIN_MESSAGE);
	}
	

	public static void stdout(int level, String location, String message) {
		if (level < Log.DEBUG || level > Log.FATAL)
			System.out.println("Log.stdout (" + location + ")  " + message);
		else
			System.out.println(levelToString[level] + " (" + location + ")  " + message);
	}


	public static void stdlog(int level, String location, String message) {
		boolean print = (level == Log.WARN || level == Log.ERROR || level == Log.FATAL);
		Log.stdlog(level, location, message, print);
	}


	public static void stdlog(int level, String location, String message, boolean print) {
		if (print)
			Log.stdout(level, location, message);

		try (BufferedWriter writer = Files.newBufferedWriter(Paths.get(Log.STDLOG_FILE),
															 StandardCharsets.UTF_8,
															 StandardOpenOption.APPEND,
															 StandardOpenOption.CREATE)) {
			if (level < Log.DEBUG || level > Log.FATAL)
				writer.write("Log.stdout (" + location + ")  " + message + "\n");
			else
				writer.write(levelToString[level] + " (" + location + ")  " + message + "\n");
		} catch (IOException e) {
			e.printStackTrace();
		}

		if (level == Log.FATAL)
			System.exit(Log.FATAL);
	}
	
}
